#use built in iris dataset
#take a look at it
head(iris)
#load in some tidyverse packages
library(dplyr)
library(ggplot2)
#####################################
##### Part 1: for loops         #####
#####################################
#Using only data for iris versicolor
#write a for loop
#that produces a regression table
#for each of the following relationships
#1. iris  sepal length x width
#2. iris  petal length x width
#3. iris sepal length x petal length
#####################################
##### Part 2: data in dplyr     #####
#####################################
install.packages(c("ggplot2","dplyr"))
#use dplyr to join data of maximum height
#to a new iris data frame
height <- data.frame(Species = c("virginica","setosa","versicolor"),
Height.cm = c(60,100,11.8))
#####################################
##### Part 3: plots in ggplot2  #####
#####################################
#look at base R scatter plot
plot(iris$Sepal.Length,iris$Sepal.Width)
#3a. now make the same plot in ggplot
#3b. make a scatter plot with ggplot and get rid of  busy grid lines
#3c.make a scatter plot with ggplot and get rid of grid lines
#and show species by color increasing the point size
#####################################
##### Question: how did         #####
##### arguments differ between  #####
##### plot and ggplot?          #####
#####################################
#use built in iris dataset
#take a look at it
install.packages(c("ggplot2","dplyr"))
head(iris)
#load in some tidyverse packages
library(dplyr)
library(ggplot2)
#####################################
##### Part 1: for loops         #####
#####################################
#Using only data for iris versicolor
#write a for loop
#that produces a regression table
#for each of the following relationships
#1. iris  sepal length x width
#2. iris  petal length x width
#3. iris sepal length x petal length
#####################################
##### Part 2: data in dplyr     #####
#####################################
#use dplyr to join data of maximum height
#to a new iris data frame
height <- data.frame(Species = c("virginica","setosa","versicolor"),
Height.cm = c(60,100,11.8))
#####################################
##### Part 3: plots in ggplot2  #####
#####################################
#look at base R scatter plot
plot(iris$Sepal.Length,iris$Sepal.Width)
#3a. now make the same plot in ggplot
#3b. make a scatter plot with ggplot and get rid of  busy grid lines
#3c.make a scatter plot with ggplot and get rid of grid lines
#and show species by color increasing the point size
#####################################
##### Question: how did         #####
##### arguments differ between  #####
##### plot and ggplot?          #####
#####################################
install.packages(c("ggplot2", "dplyr"))
head(iris)
#use built in iris dataset
#take a look at it
#install.packages(c("ggplot2","dplyr"))
head(iris)
#load in some tidyverse packages
library(dplyr)
library(ggplot2)
#use dplyr to join data of maximum height
#to a new iris data frame
height <- data.frame(Species = c("virginica","setosa","versicolor"),
Height.cm = c(60,100,11.8))
#use built in iris dataset
#take a look at it
#install.packages(c("ggplot2","dplyr"))
head(iris)
versicolor<-iris$Species=="versicolor"
versicolor
versicolor<-iris[Species=="versicolor", ]
versicolor
versicolor<-iris[iris$Species=="versicolor", ]
versicolor
help(lm)
lm.out<- lm(versicolor[,"Sepal.Length"])
lm.out<- lm(versicolor[ ,"Sepal.Length"])
lm.out<- lm(versicolor[ ,"Sepal.Length"] ~ versicolor[ ,"Sepal.Length"])
lm.out<- lm(versicolor$Sepal.Length)
lm.out<- lm(versicolor[ ,"Sepal.Width"] ~ versicolor[ ,"Sepal.Length"])
lm.out<- lm(versicolor$Sepal.Width ~ versicolor$Sepal.Length)
lm.out<- lm(versicolor[ ,"Sepal.Width"] ~ versicolor[ ,"Sepal.Length"])
lm.out
summary(lm.out)
#use built in iris dataset
#take a look at it
#install.packages(c("ggplot2","dplyr"))
head(iris)
lm.out<- list()
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[ ,paste(y[i])] ~ versicolor[ ,paste(x[i]]))
)
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[ ,paste(y[i])] ~ versicolor[ ,paste(x[i]]))
)
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[ ,paste(y[i])] ~ versicolor[ ,paste(x[i]])))
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[ ,paste(y[i])] ~ versicolor[ ,paste(x[i]])))
# always going to be y ~ x left of ~ is dependent, right is independent
#y is a function of (~) x
lm.out<- lm(versicolor[ ,"Sepal.Width"] ~ versicolor[ ,"Sepal.Length"])
#summary(lm.out)
#lm.out<- lm(versicolor$Sepal.Width ~ versicolor$Sepal.Length)
#does the same thing as above
lm.out<- list()
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[ ,paste(y[i])] ~ versicolor[ ,paste(x[i]]))
)
lm.out<- list()
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[ ,y[i]] ~ versicolor[ ,x[i]])
)
versicolor<-iris[iris$Species=="versicolor", ]
versicolor
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[ ,y[i]] ~ versicolor[ ,x[i]])
)
lm.out<- list()
for(i in 1:3)(
#paste is helpful in gettting around assumptions that r wants to make about characters vs numbers
lm.out[[i]]<- lm(versicolor[,y[i]] ~ versicolor[,x[i]])
)
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3)(
lm.out[[i]]<- lm(versicolor[,y[i]] ~ versicolor[,x[i]])
)
#use dplyr to join data of maximum height
#to a new iris data frame
height <- data.frame(Species = c("virginica","setosa","versicolor"),
Height.cm = c(60,100,11.8))
# always going to be y ~ x left of ~ is dependent, right is independent
#y is a function of (~) x
lm.out<- lm(versicolor[ ,"Sepal.Width"] ~ versicolor[ ,"Sepal.Length"])
versicolor<-iris[iris$Species=="versicolor", ]
versicolor
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3)(
lm.out[[i]]<- lm(versicolor[,y[i]] ~ versicolor[,x[i]])
)
versicolor<-iris[iris$Species=="versicolor", ]
versicolor
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3)(
lm.out[[i]]<- lm(versicolor[,y[i]] ~ versicolor[,x[i]])
)
#iris left
#height right
iris2<-left_join(iris,height,by="Species")
#use dplyr to join data of maximum height
#to a new iris data frame
height <- data.frame(Species = c("virginica","setosa","versicolor"),
Height.cm = c(60,100,11.8))
#iris left
#height right
iris2<-left_join(iris,height,by="Species")
iris2
iris2$Petal.Width/iris2$Height.cm
#####################################
##### Part 3: plots in ggplot2  #####
#####################################
#look at base R scatter plot
plot(iris$Sepal.Length,iris$Sepal.Width)
ggplot(iris,aes(Sepal.Length, Sepal.Width)) +
geom_point()
ggplot(iris,aes(Sepal.Length, Sepal.Width)) +
geom_point(size=4) +
theme_classic()
ggplot(iris,aes(Sepal.Length, Sepal.Width)color=Species) +
geom_point(size=4) +
theme_classic()
ggplot(iris,aes(Sepal.Length, Sepal.Width, color=Species)) +
geom_point(size=4) +
theme_classic()
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3)(
lm.out[[i]]<- lm(versicolor[,y[i]] ~ versicolor[,x[i]])
)
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3){
lm.out[[i]]<- lm(versicolor[,y[i]] ~ versicolor[,x[i]])
}
x<- c("Sepal.Width","Petal.Length","Sepal.Length")
y<- c("Sepal.Width","Petal.Width","Petal.Length")
lm.out<- list()
for(i in 1:3){
lm.out[[i]]<- lm(versicolor[,y[i]] ~ versicolor[,x[i]])
}
